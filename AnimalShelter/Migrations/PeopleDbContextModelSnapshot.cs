// <auto-generated />
using System;
using AnimalShelter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalShelter.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    partial class PeopleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalShelter.Models.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin")
                        .HasName("Admin_PK");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("AnimalShelter.Models.Adopter", b =>
                {
                    b.Property<int>("IdAdopter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonIdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdAdopter");

                    b.HasIndex("PersonIdPerson");

                    b.ToTable("Adopter");
                });

            modelBuilder.Entity("AnimalShelter.Models.AdoptionOfficeWorker", b =>
                {
                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.HasKey("IdEmployee")
                        .HasName("AOWorker_PK");

                    b.ToTable("AdoptionOfficeWorker");
                });

            modelBuilder.Entity("AnimalShelter.Models.Director", b =>
                {
                    b.Property<int>("IdDirector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdDirector")
                        .HasName("Director_PK");

                    b.ToTable("Director");
                });

            modelBuilder.Entity("AnimalShelter.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QuitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("IdEmployee")
                        .HasName("Employee_PK");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AnimalShelter.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("IdPerson")
                        .HasName("Person_PK");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.Vet", b =>
                {
                    b.Property<int>("IdVet")
                        .HasColumnType("int");

                    b.Property<string>("PWZNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVet")
                        .HasName("Vet_PK");

                    b.ToTable("Vet");
                });

            modelBuilder.Entity("AnimalShelter.Models.Volunteer", b =>
                {
                    b.Property<int>("IdVolunteer")
                        .HasColumnType("int");

                    b.Property<string>("Attendance")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdVolunteer")
                        .HasName("Volunteer_PK");

                    b.ToTable("Volunteer");
                });

            modelBuilder.Entity("AnimalShelter.Models.Admin", b =>
                {
                    b.HasOne("AnimalShelter.Models.Person", "Person")
                        .WithMany("Admins")
                        .HasForeignKey("IdAdmin")
                        .HasConstraintName("Person_Admin")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.Adopter", b =>
                {
                    b.HasOne("AnimalShelter.Models.Person", "Person")
                        .WithMany("Adopters")
                        .HasForeignKey("PersonIdPerson");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.AdoptionOfficeWorker", b =>
                {
                    b.HasOne("AnimalShelter.Models.Employee", "Employee")
                        .WithMany("AdoptionOfficeWorkers")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("Employee_AOWorker")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AnimalShelter.Models.Employee", b =>
                {
                    b.HasOne("AnimalShelter.Models.Person", "Person")
                        .WithMany("Employees")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("Person_Emplyee")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.Person", b =>
                {
                    b.HasOne("AnimalShelter.Models.Director", "Director")
                        .WithOne("Person")
                        .HasForeignKey("AnimalShelter.Models.Person", "IdPerson")
                        .HasConstraintName("Person_Director")
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("AnimalShelter.Models.Vet", b =>
                {
                    b.HasOne("AnimalShelter.Models.Employee", "Employee")
                        .WithMany("Vets")
                        .HasForeignKey("IdVet")
                        .HasConstraintName("Employee_Vet")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AnimalShelter.Models.Volunteer", b =>
                {
                    b.HasOne("AnimalShelter.Models.Person", "Person")
                        .WithMany("Volunteers")
                        .HasForeignKey("IdVolunteer")
                        .HasConstraintName("Person_Volunteer")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.Director", b =>
                {
                    b.Navigation("Person");
                });

            modelBuilder.Entity("AnimalShelter.Models.Employee", b =>
                {
                    b.Navigation("AdoptionOfficeWorkers");

                    b.Navigation("Vets");
                });

            modelBuilder.Entity("AnimalShelter.Models.Person", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Adopters");

                    b.Navigation("Employees");

                    b.Navigation("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
